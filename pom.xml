<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.ccci</groupId>
  <artifactId>deployments</artifactId>
  <version>1.0-SNAPSHOT</version>
  <name>Webapp Deployment Tools</name>
  <description>This project contains tools for transferring webapps to remote app servers and deploying them.</description>
 
 
 
    
  <repositories>
    <repository>
      <id>ccci-libs-releases</id>
      <name>Libraries (Full Releases)</name>
      <url>http://arkham.ccci.org/artifactory/libs-releases/</url>
    </repository>
  </repositories>
  
  <ciManagement>
    <system>Bamboo</system>
  </ciManagement>
  
  <scm>
    <connection>scm:svn:http://arkham.ccci.org/svn/java/trunk/commons/deployments/</connection>
    <developerConnection>scm:svn:http://arkham.ccci.org/svn/java/trunk/commons/deployments/</developerConnection>
  </scm>
      
  <distributionManagement>
    <repository>
      <id>artifacts.ccci.org-releases</id>
      <name>artifacts.ccci.org-releases</name>
      <url>http://arkham.ccci.org:80/artifactory/libs-releases-local</url>
    </repository>
  
    <snapshotRepository>
      <id>artifacts.ccci.org-snapshots</id>
      <name>artifacts.ccci.org-snapshots</name>
      <url>http://arkham.ccci.org:80/artifactory/libs-snapshots-local</url>
    </snapshotRepository>
  </distributionManagement>
        
 
  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>2.3.2</version>
        <configuration>
          <source>${java.source.version}</source>
          <target>${java.source.version}</target>
          <showWarnings>true</showWarnings>
          <showDeprecation>true</showDeprecation>
        </configuration>
      </plugin>
      
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <version>1.4</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
              <transformers>
                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                  <mainClass>org.ccci.deployment.Main</mainClass>
                </transformer>
              </transformers>
              <artifactSet>
                <excludes>
                  <exclude>org.apache.ant:*</exclude>
                  <exclude>javax.servlet:servlet-api</exclude>
                  <exclude>org.jboss.seam:*</exclude>
                  <exclude>xstream:xstream</exclude>
                  <exclude>xpp3:xpp3_min</exclude>
                  <exclude>commons-beanutils:commons-beanutils</exclude>
                  <exclude>org.jboss.el:jboss-el</exclude>
                  <exclude>javax.el:el-api</exclude>
                  <exclude>com.sun.facelets:jsf-facelets</exclude>
                  <exclude>joda-ext:jodaExt</exclude>
                  <exclude>org.testng:testng</exclude>
                  <exclude>org.slf4j:slf4j-api</exclude>
                  <exclude>org.ccci:cas-client-custom</exclude>
                </excludes>
              </artifactSet>
            </configuration>
          </execution>
        </executions>
        
         <!-- 
         this plugin's dependency on org.apache.commons:commons-io is problematic.  That lib
         is not the official commons-io maven artifact, and it's pom is malformed, which causes
         artifactory to refuse to cache it.  So, replace it with the correct commons-io dependency,
         commons-io:commons-io.
          -->
         <dependencies>
           <dependency>
             <groupId>org.vafer</groupId>
             <artifactId>jdependency</artifactId>
             <version>0.6</version>
             <exclusions>
               <exclusion>
                 <groupId>org.apache.commons</groupId>
                 <artifactId>commons-io</artifactId>
               </exclusion>
             </exclusions>
           </dependency>
           
           <dependency>
             <groupId>commons-io</groupId>
             <artifactId>commons-io</artifactId>
             <version>1.3.2</version>
          </dependency>
        </dependencies>
              
      </plugin>
      
    </plugins>
  </build>
  
  <dependencies>
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <version>r07</version>
    </dependency>
    
    <dependency>
        <groupId>joda-time</groupId>
        <artifactId>joda-time</artifactId>
        <version>1.6</version>
    </dependency>
    
    <dependency>
        <groupId>org.ccci</groupId>
        <artifactId>util</artifactId>
        <version>1.0-SNAPSHOT</version>
    </dependency>
    
        
    <dependency>
      <groupId>org.jvnet.hudson</groupId>
      <artifactId>jinterop-wmi</artifactId>
      <version>1.0</version>
    </dependency>
    
    <dependency>
      <groupId>com.beust</groupId>
      <artifactId>jcommander</artifactId>
      <version>1.13</version>
    </dependency>
    
    <dependency>
      <groupId>org.apache.ant</groupId>
      <artifactId>ant</artifactId>
      <version>1.8.2</version>
    </dependency>

    <dependency>
      <groupId>javax.mail</groupId>
      <artifactId>mail</artifactId>
      <version>1.4</version>
    </dependency>
    
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpclient</artifactId>
      <version>4.0</version>
    </dependency>
    
  </dependencies> 
  
  
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <java.source.version>1.6</java.source.version>
    
        
    <!-- This is to address a maven 3 + bamboo (< 2.6) problem: http://jira.atlassian.com/browse/BAM-4887
      We work around this by manually printing the token Bamboo is looking for in a successful build.  The
      build should be configured to run the standard maven goals and then the help:evaluate goal; e.g.
      mvn help:evaluate -Dexpression='atlassian.bamboo.builder.successMarker'
        -->
    <atlassian.bamboo.builder.successMarker>BUILD SUCCESSFUL</atlassian.bamboo.builder.successMarker>
  </properties>

</project>